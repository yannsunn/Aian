'use client'\n\nimport { useState, useEffect } from 'react'\nimport { abTesting } from '@/lib/ab-testing'\n\ninterface ABTestHook {\n  variant: any\n  trackConversion: (conversionType: string, value?: number) => void\n  isLoading: boolean\n}\n\nexport const useABTest = (testId: string): ABTestHook => {\n  const [variant, setVariant] = useState<any>(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    const initializeTest = async () => {\n      try {\n        // 少し遅延を入れてアナリティクスの初期化を待つ\n        setTimeout(() => {\n          const selectedVariant = abTesting.getVariant(testId)\n          setVariant(selectedVariant)\n          setIsLoading(false)\n        }, 100)\n      } catch (error) {\n        console.error('AB Test initialization error:', error)\n        setIsLoading(false)\n      }\n    }\n\n    initializeTest()\n  }, [testId])\n\n  const trackConversion = (conversionType: string, value?: number) => {\n    if (variant) {\n      abTesting.trackConversion(testId, conversionType, value)\n    }\n  }\n\n  return {\n    variant,\n    trackConversion,\n    isLoading\n  }\n}\n\n// 特定のテスト用のフック\nexport const useHeroTest = () => {\n  return useABTest('hero-optimization-2024')\n}\n\nexport const useGalleryTest = () => {\n  return useABTest('gallery-trust-signals-2024')\n}